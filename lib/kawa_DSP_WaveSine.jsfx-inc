
//====================================================================
@init
//====================================================================
//  WAVESINE_create() 
//====================================================================
//    WAVESINE_getRate             (WAVESINE_ID)         
//    WAVESINE_getCountTime        (WAVESINE_ID)    
//    WAVESINE_getSampleRate       (WAVESINE_ID)   
//    WAVESINE_getGenerateWaveType (WAVESINE_ID)   
//    WAVESINE_getPolarType        (WAVESINE_ID)   
//    WAVESINE_setRate             (WAVESINE_ID,v)       
//    WAVESINE_setCountTime        (WAVESINE_ID,v)  
//    WAVESINE_setSampleRate       (WAVESINE_ID,v) 
//    WAVESINE_setGenerateWaveType (WAVESINE_ID,v) 
//    WAVESINE_setPolarType        (WAVESINE_ID,v)  
//====================================================================
//    WAVESINE_getAndTick          (WAVESINE_ID)
//    WAVESINE_get                 (WAVESINE_ID)
//====================================================================

//====================================================================
// generate wave Type
//====================================================================
DEFINE_GENERATE_WAVE_TYPE_SIN  = 0;
DEFINE_GENERATE_WAVE_TYPE_SAW  = 1;
DEFINE_GENERATE_WAVE_TYPE_RECT = 2;
DEFINE_GENERATE_WAVE_TYPE_TRI  = 3;
//====================================================================
DEFINE_WAVE_SIGNALE_BIPOLAR    = 0;
DEFINE_WAVE_SIGNALE_UNIPOLAR   = 1;
//====================================================================

//====================================================================
// wave Sine genelator
//====================================================================
function WAVESINE_create() local (WAVESINE_ID)
(
    //================================================================
    WAVESINE_ID = STATIC_MASTER_BUFF_ID;
    //================================================================
    STATIC_MASTER_BUFF[WAVESINE_ID]   = "WAVESINE";    // class name
    STATIC_MASTER_BUFF[WAVESINE_ID+1] = 8;             // total Element Num 
    //================================================================
    STATIC_MASTER_BUFF[WAVESINE_ID+2] = 440 ;          // RATE hz
    STATIC_MASTER_BUFF[WAVESINE_ID+3] = 0;             // count Time
    STATIC_MASTER_BUFF[WAVESINE_ID+4] = srate;         // sampleRate
    STATIC_MASTER_BUFF[WAVESINE_ID+5] = 0;             // last genelated Wave sin
    STATIC_MASTER_BUFF[WAVESINE_ID+6] = DEFINE_GENERATE_WAVE_TYPE_SIN;      // waveType
    STATIC_MASTER_BUFF[WAVESINE_ID+7] = DEFINE_WAVE_SIGNALE_BIPOLAR;      // waveType
    STATIC_MASTER_BUFF[WAVESINE_ID+8] = STATIC_MASTER_BUFF[WAVESINE_ID+1];  // element Num only this class
    //================================================================
    STATIC_MASTER_BUFF_ID += STRUCT_getElementNum(WAVESINE_ID)+1;
    //================================================================
    WAVESINE_ID;
);
//====================================================================
function _WAVESINE_getElementNum  (WAVESINE_ID)   (STATIC_MASTER_BUFF[WAVESINE_ID+8]; );
//====================================================================
function WAVESINE_getRate            (WAVESINE_ID)   (STATIC_MASTER_BUFF[WAVESINE_ID+2]; );
function WAVESINE_getCountTime       (WAVESINE_ID)   (STATIC_MASTER_BUFF[WAVESINE_ID+3]; );
function WAVESINE_getSampleRate      (WAVESINE_ID)   (STATIC_MASTER_BUFF[WAVESINE_ID+4]; );
function _WAVESINE_getLastWaveSine   (WAVESINE_ID)   (STATIC_MASTER_BUFF[WAVESINE_ID+5]; );
function WAVESINE_getGenerateWaveType(WAVESINE_ID)   (STATIC_MASTER_BUFF[WAVESINE_ID+6]; );
function WAVESINE_getPolarType       (WAVESINE_ID)   (STATIC_MASTER_BUFF[WAVESINE_ID+7]; );
//====================================================================
function WAVESINE_setRate            (WAVESINE_ID,v) (STATIC_MASTER_BUFF[WAVESINE_ID+2] = v; );
function WAVESINE_setCountTime       (WAVESINE_ID,v) (STATIC_MASTER_BUFF[WAVESINE_ID+3] = v; );
function WAVESINE_setSampleRate      (WAVESINE_ID,v) (STATIC_MASTER_BUFF[WAVESINE_ID+4] = v; );
function _WAVESINE_setLastWaveSine   (WAVESINE_ID,v) (STATIC_MASTER_BUFF[WAVESINE_ID+5] = v; );
function WAVESINE_setGenerateWaveType(WAVESINE_ID,v) (STATIC_MASTER_BUFF[WAVESINE_ID+6] = v; );
function WAVESINE_setPolarType       (WAVESINE_ID,v) (STATIC_MASTER_BUFF[WAVESINE_ID+7] = v; );
//====================================================================
function _WAVESINE_gen(WAVESINE_ID) 
    local (  wave
           , timeCount
           , sampleRate
           , rate
           , waveType
           , oneDivSample//for saw,rect,tri
           , rateCount //for triangle
           )
(
    timeCount = WAVESINE_getCountTime(WAVESINE_ID);
    sampleRate = WAVESINE_getSampleRate(WAVESINE_ID);
    rate = WAVESINE_getRate(WAVESINE_ID);
    //================================================================
    waveType = WAVESINE_getGenerateWaveType(WAVESINE_ID);
    polarType = WAVESINE_getPolarType(WAVESINE_ID);
    //================================================================
    ( waveType == DEFINE_GENERATE_WAVE_TYPE_SIN )?
    (
        wave = sin( (2*$pi* rate * timeCount)/sampleRate );
        //============================================================
        ( polarType == DEFINE_WAVE_SIGNALE_UNIPOLAR)?
        (
            wave = abs(wave);
        );
        //============================================================
    ):(waveType == DEFINE_GENERATE_WAVE_TYPE_RECT )?
    (
        // Rect 
        oneDivSample = srate/ ( 2 * rate );
        wave =(floor(timeCount / oneDivSample )% 2 );
        //============================================================
        (polarType == DEFINE_WAVE_SIGNALE_BIPOLAR)?
        (
            wave = wave *2 -1;
        );
        //============================================================
    ):(waveType == DEFINE_GENERATE_WAVE_TYPE_SAW )?
    (
        // saw
        oneDivSample = srate/ ( 2 * rate );
        //============================================================
        wave  = 1-( (timeCount  % oneDivSample)/oneDivSample ) ;
        //============================================================
        (polarType == DEFINE_WAVE_SIGNALE_BIPOLAR)?
        (
            wave = wave *2 -1;
        );
        //============================================================
    ):(waveType == DEFINE_GENERATE_WAVE_TYPE_TRI )?
    (
        //tri
        //amp =1 ;
        rateCount = ceil(srate/2/rate);
        //============================================================
        // http://stackoverflow.com/questions/1073606/is-there-a-one-line-function-that-generates-a-triangle-wave
        // y = (A/P) * (P - abs(x % (2*P) - P) )
        //============================================================
        wave = ( 1 /rateCount) 
                   * ( rateCount - abs( timeCount % (2*rateCount)-rateCount)) ;
        //============================================================
        (polarType == DEFINE_WAVE_SIGNALE_BIPOLAR)?
        (
            wave = wave *2 -1;
        );
        //============================================================
    );
    //================================================================
    _WAVESINE_setLastWaveSine(WAVESINE_ID,wave);
    //================================================================
);
//====================================================================
function _WAVESINE_tick(WAVESINE_ID) local( newCount)
(
    //================================================================
    newCount = WAVESINE_getCountTime(WAVESINE_ID) +1;
    //================================================================
    ( newCount >= ( WAVESINE_getSampleRate(WAVESINE_ID )/ WAVESINE_getRate(WAVESINE_ID) ) )?
    (
        newCount = 0;
    );
    //================================================================
    WAVESINE_setCountTime(WAVESINE_ID,newCount);
    //================================================================
);
//====================================================================
function WAVESINE_getAndTick(WAVESINE_ID) local (timeCount,sampleRate,rate)
(
    _WAVESINE_gen(WAVESINE_ID);
    _WAVESINE_tick(WAVESINE_ID);
    //================================================================
    _WAVESINE_getLastWaveSine(WAVESINE_ID);
);
//====================================================================
function WAVESINE_get(WAVESINE_ID)
(
    _WAVESINE_getLastWaveSine(WAVESINE_ID);
);
//====================================================================



