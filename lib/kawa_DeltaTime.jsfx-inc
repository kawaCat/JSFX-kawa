
//====================================================================
// DELTATIME Counter
//====================================================================
//  DELTATIME_create()local(DELTATIME_ID) //speed  Div 0.1 ~
//====================================================================
//    DELTATIME_getDeltaTime              (DELTATIME_ID)   
//    DELTATIME_getLastTime               (DELTATIME_ID)    
//    DELTATIME_setLastTime               (DELTATIME_ID,t)  
//    DELTATIME_stepByTime                (DELTATIME_ID,speedDiv_)
//    DELTATIME_stepByValue               (DELTATIME_ID,addValue)
//    DELTATIME_getDeltaTimeWithStepTime  (DELTATIME_ID,speedDiv) 
//    DELTATIME_getDeltaTimeWithStepValue (DELTATIME_ID,addValue) 
//====================================================================


//====================================================================
@init
//====================================================================

//====================================================================
// DELTATIME Counter
//====================================================================
function DELTATIME_create()local(DELTATIME_ID) //speed  Div 0.1 ~
(
    DELTATIME_ID = STATIC_MASTER_BUFF_ID;
    //================================================================
    STATIC_MASTER_BUFF[DELTATIME_ID]   = "DELTATIME";   // class name
    STATIC_MASTER_BUFF[DELTATIME_ID+1] = 5;             // total Element Num 
    //================================================================
    STATIC_MASTER_BUFF[DELTATIME_ID+2] = 0.0;           // non use
    STATIC_MASTER_BUFF[DELTATIME_ID+3] = 0.0;           // currentAnimTime
    STATIC_MASTER_BUFF[DELTATIME_ID+4] = time_precise()/1000;  // lastTime
    STATIC_MASTER_BUFF[DELTATIME_ID+5] = STATIC_MASTER_BUFF[DELTATIME_ID+1];  // element Num Only DeletaTime Class
    //================================================================
    STATIC_MASTER_BUFF_ID +=STRUCT_getElementNum(DELTATIME_ID)+1;
    //================================================================
    DELTATIME_ID;
);
//====================================================================
function _DELTATIME_getElementNum(DELTATIME_ID) ( STATIC_MASTER_BUFF[DELTATIME_ID + 5];);// protected
//====================================================================
function DELTATIME_getDeltaTime(DELTATIME_ID)   ( STATIC_MASTER_BUFF[DELTATIME_ID + 3]; );
//====================================================================
function DELTATIME_getLastTime (DELTATIME_ID)   ( STATIC_MASTER_BUFF[DELTATIME_ID + 4];);
function DELTATIME_setLastTime (DELTATIME_ID,t) ( STATIC_MASTER_BUFF[DELTATIME_ID + 4]=t;);
//====================================================================
function _DELTATIME_round(newTime) local (out)
(
    out = newTime;
    (out > 1.0 )?(out =0.0);
    (out < 0.0 )?(out =1.0);
    out;
);
//====================================================================
function _DELTATIME_addDeltaTime(DELTATIME_ID,t) local (newDt)
( 
    STATIC_MASTER_BUFF[  DELTATIME_ID + 3] +=t; 
    newDt =_DELTATIME_round(STATIC_MASTER_BUFF[  DELTATIME_ID + 3]);
    //================================================================
    STATIC_MASTER_BUFF[ DELTATIME_ID + 3] = newDt;
    //================================================================
);
//====================================================================
function DELTATIME_stepByTime(DELTATIME_ID,speedDiv_) local (lastTime,time_p,distance,dt)
(
    time_p =time_precise();
    lastTime = DELTATIME_getLastTime(DELTATIME_ID);
    distance = (time_p-lastTime);
    //================================================================
    _DELTATIME_addDeltaTime(DELTATIME_ID,(distance/speedDiv_));
    //================================================================
    DELTATIME_setLastTime(DELTATIME_ID,time_p);
    //================================================================
);
//====================================================================
function DELTATIME_stepByValue(DELTATIME_ID,addValue) local (lastTime,time_p,distance,dt)
(
    //================================================================
    _DELTATIME_addDeltaTime(DELTATIME_ID,addValue);
    //================================================================
);
//====================================================================
function DELTATIME_getDeltaTimeWithStepTime(DELTATIME_ID,speedDiv) local (dt)
(
    DELTATIME_stepByTime(DELTATIME_ID,speedDiv);
    dt = DELTATIME_getDeltaTime(DELTATIME_ID);
    dt;
);
//====================================================================
function DELTATIME_getDeltaTimeWithStepValue(DELTATIME_ID,addValue) local (dt)
(
    DELTATIME_stepByValue(DELTATIME_ID,addValue);
    dt = DELTATIME_getDeltaTime(DELTATIME_ID);
    dt;
);
//====================================================================