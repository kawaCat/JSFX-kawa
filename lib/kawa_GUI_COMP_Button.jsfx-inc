
//====================================================================
@init
//====================================================================


//====================================================================
// Inheritance List
// * Rectangle
// * Component
//====================================================================
function BUTTON_create(name) local (BUTTON_ID,baseClassElementNum)
(
    //================================================================
    BUTTON_ID = COMPONENT_create(name);
    //================================================================
    STATIC_MASTER_BUFF[BUTTON_ID ]     = "BUTTON";        // classTYPE
    //================================================================
    baseClassElementNum =_COMPONENT_getElementNum(BUTTON_ID);
    //================================================================
    
    //================================================================
    STATIC_MASTER_BUFF[BUTTON_ID + 1]  = baseClassElementNum +1;// total elementNUM
    STATIC_MASTER_BUFF[BUTTON_ID + baseClassElementNum + 1]  = STATIC_MASTER_BUFF[BUTTON_ID + 1]; // element num in  BUTTON CLASS
    //================================================================
    
    //================================================================
    STATIC_MASTER_BUFF_ID += STRUCT_getElementNum (BUTTON_ID)+1; // increment next entry Bufff Point
    //================================================================


    // init prepare.
    //================================================================
    
    //================================================================
    COMPONENT_addColor( BUTTON_ID
                      ,"textColor"
                      , COLOR_create(0,0,0,1));
    //================================================================
    COMPONENT_addColor( BUTTON_ID
                      ,"textColor_mouseon"
                      , COLOR_create(0,1,1,1));
    //================================================================
    COMPONENT_addColor( BUTTON_ID
                      ,"butonOnBackGroundColor"
                      , COLOR_create(0,0,1,1));
    //================================================================
    
    COMPONENT_setComponentInfoValue( BUTTON_ID,"buttonOnText_Post" ,":ON ") ;
    COMPONENT_setComponentInfoValue( BUTTON_ID,"buttonOffText_Post",":OFF") ;
    
   
    //================================================================
    BUTTON_ID; //retrun
);
//====================================================================
function _BUTTON_getElementNum(BUTTON_ID)          ( STATIC_MASTER_BUFF[BUTTON_ID + _COMPONENT_getElementNum(BUTTON_ID)+1];); //protected
//====================================================================
function BUTTON_getOnTextPostFix(BUTTON_ID)        ( COMPONENT_getComponentInfoValue(BUTTON_ID,"buttonOnText_Post"););
function BUTTON_getOffTextPostFix(BUTTON_ID)       ( COMPONENT_getComponentInfoValue(BUTTON_ID,"buttonOffText_Post"););
function BUTTON_setOnTextPostFix(BUTTON_ID,str)    ( COMPONENT_setComponentInfoValue(BUTTON_ID,"buttonOnText_Post",str););
function BUTTON_setOffTextPostFix(BUTTON_ID,str)   ( COMPONENT_setComponentInfoValue(BUTTON_ID,"buttonOffText_Post",str););
//====================================================================
function BUTTON_isON(BUTTON_ID)                    ( (COMPONENT_getValue(BUTTON_ID) > 0););
function BUTTON_isOFF(BUTTON_ID)                   ( (BUTTON_isON(BUTTON_ID) == false ););
function BUTTON_setON(BUTTON_ID,isSedeReaper)      ( COMPONENT_setValue(BUTTON_ID,1,isSedeReaper););
function BUTTON_ON(BUTTON_ID,isSedeReaper)         ( COMPONENT_setValue(BUTTON_ID,1,isSedeReaper););
function BUTTON_setOFF(BUTTON_ID,isSedeReaper)     ( COMPONENT_setValue(BUTTON_ID,0,isSedeReaper););
function BUTTON_OFF(BUTTON_ID,isSedeReaper)        ( COMPONENT_setValue(BUTTON_ID,0,isSedeReaper););
function BUTTON_toggleOnOff(BUTTON_ID,isSedeReaper)( COMPONENT_setValue(BUTTON_ID,(BUTTON_isON(BUTTON_ID)==false),isSedeReaper); );
//====================================================================

//====================================================================
function BUTTON_update(BUTTON_ID) 
(   
    // store last value
    COMPONENT_update( BUTTON_ID);
    //================================================================
);
//====================================================================
function BUTTON_resized(BUTTON_ID,parrentRECT )
( 
    0; 
);
//====================================================================
function BUTTON_draw(BUTTON_ID)local (tempText)
(
    //================================================================
    (   RECTANGLE_isContainMouse(BUTTON_ID) ==true ) ?
    (
        COMPONENT_changeColorGfx( BUTTON_ID,"bakcground_mouseon");
    ):( BUTTON_isON(BUTTON_ID) == true ) ?
    (
        COMPONENT_changeColorGfx( BUTTON_ID,"butonOnBackGroundColor");
    ):(
        COMPONENT_changeColorGfx( BUTTON_ID,"bakcground");
    );
    //================================================================
    RECTANGLE_drawFill(BUTTON_ID,true); //test
    //================================================================
    ( RECTANGLE_isContainMouse(BUTTON_ID) ==true) ?
    (
        COMPONENT_changeColorGfx( BUTTON_ID,"textColor_mouseon");
    ):(
        COMPONENT_changeColorGfx( BUTTON_ID,"textColor");
    );
    //================================================================
    tempText = #;
    sprintf( tempText ,COMPONENT_getName(BUTTON_ID) );
    //================================================================
    (BUTTON_isON(BUTTON_ID) ==true)?
    (
        strcat(tempText, BUTTON_getOnTextPostFix(BUTTON_ID));
        COMPONENT_changeColorGfx( BUTTON_ID,"textColor_mouseon");
    ):(
        strcat(tempText, BUTTON_getOffTextPostFix(BUTTON_ID));
    );
    //================================================================
    RECTANGLE_drawStrInCenterFitFont(BUTTON_ID,tempText);
    //================================================================
);
//====================================================================
function BUTTON_mouseMoved(BUTTON_ID,MOUSEINFO_ID)
(
    ( RECTANGLE_isContainMouse(BUTTON_ID) ==true) ?
    (
        DBG(" BUTTON  Mouse Moved");
    );
   //=================================================================
);
//====================================================================
function BUTTON_mouseButtonPressd(BUTTON_ID,MOUSEINFO_ID )local(circle_Area_ID)
(
    //================================================================
    ( RECTANGLE_isContainMouse(BUTTON_ID) ==true) ?
    (
        DBG(" BUTTON Mouse Button Press IN");
        COMPONENT_setIsMousePressStartedInThisComp(BUTTON_ID,true);
    ):(
        COMPONENT_setIsMousePressStartedInThisComp(BUTTON_ID,false);
    );
    //================================================================
);
//====================================================================
function BUTTON_mouseButtonReleased( BUTTON_ID,MOUSEINFO_ID )local (tempstr)
(
    //================================================================
    ( RECTANGLE_isContainMouse(BUTTON_ID) ==true) ?
    (
        //============================================================
        DBG(" BUTTON Mouse Button Released");
        //============================================================
        (COMPONENT_isMousePressStartedInThisComp(BUTTON_ID) ==true)?
        (
            BUTTON_toggleOnOff(BUTTON_ID,true);
        );
    );
    //================================================================
);
//====================================================================
function BUTTON_mouseWheeled(BUTTON_ID,MOUSEINFO_ID )
(
    //================================================================
    ( RECTANGLE_isContainMouse(BUTTON_ID) ==true) ?
    (
        DBG(" BUTTON Mouse Wheeld");
    );
    //================================================================
);
//====================================================================


